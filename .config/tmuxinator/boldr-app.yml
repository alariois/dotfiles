# /home/alari/.config/tmuxinator/boldr-app.yml

# NB!
# This script expects a remote mac keychain password to be saved in 'pass mac'
# fx, curl, rsync and nvim must be installed

name: boldr-app
root: /home/alari/projects/superhands/boldr/code/boldr-app

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
pre_window: |
  export MAC_IP="192.168.1.164"
  export MAC_USER="alariois"
  export MAC_PROJ="projects/boldr-app"
  export MAC_PROJ_ABSOLUTE="/Users/$MAC_USER/$MAC_PROJ"

# Optional tmux socket
# socket_name: foo

# Note that the pre and post options have been deprecated and will be replaced by
# project hooks.

# Project hooks

# Runs on project start, always
# on_project_start: command

# Run on project start, the first time
# on_project_first_start: command

# Run on project start, after the first time
# on_project_restart: command

# Run on project exit ( detaching from tmux session )
# on_project_exit: command

# Run on project stop
# on_project_stop: command

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf

# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.
# tmux_command: byobu

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
# startup_window: editor

# Specifies (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.
# startup_pane: 1

# Controls whether the tmux session should be attached to automatically. Defaults to true.
# attach: false

windows:
  - code: nvim .
  - log:
      layout: 3742,342x64,0,0{63x64,0,0[63x32,0,0,7,63x31,0,33,9],128x64,64,0,8,149x64,193,0,6}
      panes:
        - >
            echo "ip = $MAC_IP";
            history -s 'echo R > /tmp/fifoboldr # reload';
            echo 'ANDROID RELOAD';
        - >
            history -s "sync_project . alariois@$MAC_IP:$MAC_PROJ # resync";
            history -s "sync_project -n . alariois@$MAC_IP:$MAC_PROJ # resync dry";
            history -s "sync_project --exclude='ios/' --exclude='*.lock' --exclude='*.json' . alariois@$MAC_IP:$MAC_PROJ; ssh alariois@$MAC_IP 'echo R > /tmp/fifoboldr' # reload";
            history -s "sync_project -n --exclude='ios/' --exclude='*.lock' --exclude='*.json' . alariois@$MAC_IP:$MAC_PROJ; ssh alariois@$MAC_IP 'echo R > /tmp/fifoboldr' # reload dry";
            clear;
            echo 'IOS RELOAD';
        - >
            history -s "less -S -R +'&MQTT: |Device: |Wifi: |Http: ' /tmp/logboldr # log";
            clear;
            echo 'ANDROID LOG';
        - >
            history -s "less -S -R +'&MQTT: |Device: |Wifi: |Http: ' /tmp/logboldrmac # log";
            clear;
            echo 'IOS LOG';
  - mac:
      layout: main-vertical
      panes:
        - >
            ssh alariois@$MAC_IP 'tail -f /tmp/logboldr' | tee /tmp/logboldrmac
        - >
            PASSWORD=$(pass mac)
             ssh -o SendEnv=PASSWORD -t alariois@$MAC_IP "
                cd $MAC_PROJ_ABSOLUTE;
                mkfifo /tmp/fifoboldr 2>/dev/null;
                echo 'tail -f /tmp/fifoboldr | flutter run | perl -pe '\''$| = 1; s/\\\\\\\\x([0-9a-fA-F]{2})/chr(hex(\$1))/ge'\'' | tee -a /tmp/logboldr # develop' >> ~/.zsh_history;
                expect -c '
                  spawn security unlock-keychain
                  expect \"password to unlock\"
                  send \"$PASSWORD\\r\"
                  expect eof
                ';
                clear;
                exec \$SHELL -l;
             "
  - android:
    - >
      history -s "tail -f /tmp/fifoboldr | flutter run | tee -a /tmp/logboldr # develop";
      clear;
  - wifi:
    - >
      history -s "sudo nmap -sn 192.168.1.1/24 # search";
      history -s "nmcli c s -a # show active";
      history -s "nmcli d w c wifissid # connect";
      history -s "nmcli -c y d w l | grep 'shelly\|' # scan";
      clear;
  - curl:
    - >
      IP=192.168.33.1;
      history -s 'curl http://$IP/shelly | fx # shelly';
      history -s 'curl http://$IP/status | fx # status';
      history -s 'curl http://$IP/settings?reset=1 | fx # reset';
      clear;
